services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: angular-app
    ports:
      - '4200:4200'
    volumes:
      - ./:/angular-app

  db:
    image: mysql:5.7
    restart: always
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3307:3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - backend_network

  mensageria:
    build:
      context: ./messageHandler
      dockerfile: Dockerfile
    container_name: mensageria
    ports:
      - "5001:5001"
    env_file:
      - ./messageHandler/.env
    volumes:
      - ./messageHandler:/messageHandler
    networks:
      - backend_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "5000:5000"
    env_file:
      - ./api/.env
    volumes:
      - ./api:/api
    networks:
      - backend_network

  minio:
    image: bitnami/minio:latest  # ou a vers√£o mais recente ou correta
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minionetwork
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DEFAULT_BUCKETS=arquivos, audios

volumes:
  minio_data:
    driver: local
  my-db:
    # Definindo o volume persistente 'my-db'

networks:
  backend_network:
    driver: bridge
    name: backend_network
  minionetwork:
    driver: bridge
